{
	"info": {
		"_postman_id": "f79ccf85-ecc5-4b7a-88f3-95a228bccacc",
		"name": "To Do App",
		"description": "This Collection will be used to test the To Do App API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21672393"
	},
	"item": [
		{
			"name": "[Auth] Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"postman@test.com\",\r\n  \"password\": \"123456\",\r\n  \"roles\": [\r\n    \"User\",\r\n    \"Adm\"\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/Auth/Register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Auth",
						"Register"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Auth] Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Jwt Token is valid\", function (){\r",
							"    response = pm.response.json();\r",
							"    pm.expect(response.jwtToken).to.not.be.null;\r",
							"});\r",
							"\r",
							"if (response != null)\r",
							"    pm.collectionVariables.set(\"jwt_token\", response.jwtToken);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"postman@test.com\",\r\n  \"password\": \"123456\",\r\n  \"expiration\": 24\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/Auth/Login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Auth",
						"Login"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Auth] Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"postman@test.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/Auth/Delete",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Auth",
						"Delete"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"User is valid\", function (){\r",
							"    response = pm.response.json();\r",
							"    pm.expect(response.id).to.not.be.null;\r",
							"});\r",
							"\r",
							"if (response != null)\r",
							"    pm.collectionVariables.set(\"test_id_user\", response.id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Jane\",\r\n  \"lastName\": \"Doe\",\r\n  \"email\": \"janedoe@test.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/Users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Users"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Get All",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/Users?filterOn=name&filterQuery=Jane&sortBy=name&isAscending=true&pageNumber=1&pageSize=10",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Users"
					],
					"query": [
						{
							"key": "filterOn",
							"value": "name"
						},
						{
							"key": "filterQuery",
							"value": "Jane"
						},
						{
							"key": "sortBy",
							"value": "name"
						},
						{
							"key": "isAscending",
							"value": "true"
						},
						{
							"key": "pageNumber",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Get by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/Users/{{test_id_user}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Users",
						"{{test_id_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains string Updated\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Updated\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Jane Updated\",\r\n  \"lastName\": \"Doe Updated\",\r\n  \"email\": \"janedoeupdated@test.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/Users/{{test_id_user}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Users",
						"{{test_id_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/Users/{{test_id_user}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Users",
						"{{test_id_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Task] Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Task is valid\", function (){\r",
							"    response = pm.response.json();\r",
							"    pm.expect(response.id).to.not.be.null;\r",
							"});\r",
							"\r",
							"if (response != null)\r",
							"    pm.collectionVariables.set(\"test_id_task\", response.id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"Task for Postman tests\",\r\n  \"createdAt\": \"11/23/2024\",\r\n  \"completed\": false,\r\n  \"userId\": \"{{test_id_user}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/Tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Task] Get All",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/Tasks?filterOn=description&filterQuery=Postman&sortBy=CreatedAt&isAscending=true&pageNumber=1&pageSize=10",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Tasks"
					],
					"query": [
						{
							"key": "filterOn",
							"value": "description"
						},
						{
							"key": "filterQuery",
							"value": "Postman"
						},
						{
							"key": "sortBy",
							"value": "CreatedAt"
						},
						{
							"key": "isAscending",
							"value": "true"
						},
						{
							"key": "pageNumber",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "[Task] Get by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/Tasks/{{test_id_task}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Tasks",
						"{{test_id_task}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Task] Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains string Updated\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Updated\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"Task for Postman tests Updated\",\r\n  \"createdAt\": \"11/23/2024 Updated\",\r\n  \"finishedAt\": \"11/23/2024\",\r\n  \"completed\": true,\r\n  \"userId\": \"{{test_id_user}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/Tasks/{{test_id_task}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Tasks",
						"{{test_id_task}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Task] Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/Tasks/{{test_id_task}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"Tasks",
						"{{test_id_task}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"if(pm.environment.get(\"tipo_url\") == \"local\")\r",
					"{\r",
					"    pm.collectionVariables.set(\"base_url\", pm.environment.get(\"url_local\"));\r",
					"}\r",
					"else\r",
					"{\r",
					"    pm.collectionVariables.set(\"base_url\", pm.environment.get(\"url_web\"));\r",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_id_user",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_id_task",
			"value": "",
			"type": "string"
		}
	]
}